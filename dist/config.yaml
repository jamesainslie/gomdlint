version: 2
project_name: gomdlint
release:
  github:
    owner: gomdlint
    name: gomdlint
  name_template: '{{.Tag}}'
  extra_files:
    - glob: configs/examples/*.json
    - glob: docs/*.md
  header: |
    ## gomdlint {{.Tag}} Release

    A high-performance Go markdown linter with plugin extensibility.
  footer: "## Installation\n\n### Binary Download\nDownload the appropriate binary for your platform from the assets below.\n\n### Package Managers\n```bash\n# Go install\ngo install github.com/gomdlint/gomdlint/cmd/gomdlint@{{.Tag}}\n\n# From source\ngit clone https://github.com/gomdlint/gomdlint.git\ncd gomdlint\ngo build ./cmd/gomdlint\n```\n\n### Verification\n```bash\ngomdlint version\ngomdlint --help\n```\n\n## What's Next\n\n- Check out the [plugin development guide](https://github.com/gomdlint/gomdlint/wiki/Plugin-Development)\n- Explore [style configurations](https://github.com/gomdlint/gomdlint/wiki/Style-Management) \n- Join our [community discussions](https://github.com/gomdlint/gomdlint/discussions)\n"
scoops:
  - name: gomdlint
    repository:
      owner: gomdlint
      name: scoop-bucket
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: Scoop update for {{ .ProjectName }} version {{ .Tag }}
    homepage: https://github.com/gomdlint/gomdlint
    description: A high-performance Go markdown linter with plugin extensibility
    license: MIT
    goamd64: v1
builds:
  - id: gomdlint
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - "386"
      - amd64
      - arm64
    goamd64:
      - v1
    go386:
      - sse2
    goarm:
      - "7"
    goarm64:
      - v8.0
    gomips:
      - hardfloat
    goppc64:
      - power8
    goriscv64:
      - rva20u64
    targets:
      - linux_386_sse2
      - linux_amd64_v1
      - linux_arm64_v8.0
      - windows_386_sse2
      - windows_amd64_v1
      - windows_arm64_v8.0
      - darwin_amd64_v1
      - darwin_arm64_v8.0
    dir: .
    main: ./cmd/gomdlint
    binary: gomdlint
    builder: go
    tool: go
    command: build
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
    env:
      - CGO_ENABLED=0
archives:
  - id: default
    builds_info:
      mode: 493
    name_template: '{{ .ProjectName }}_ {{- title .Os }}_ {{- if eq .Arch "amd64" }}x86_64 {{- else if eq .Arch "386" }}i386 {{- else }}{{ .Arch }}{{ end }} {{- if .Arm }}v{{ .Arm }}{{ end }}'
    formats:
      - tar.gz
    format_overrides:
      - goos: windows
        formats:
          - zip
        format: zip
    files:
      - src: README.md
      - src: LICENSE
      - src: CHANGELOG.md
    format: tar.gz
nfpms:
  - file_name_template: '{{ .ProjectName }}_ {{- title .Os }}_ {{- if eq .Arch "amd64" }}x86_64 {{- else if eq .Arch "386" }}i386   {{- else }}{{ .Arch }}{{ end }}'
    package_name: gomdlint
    dependencies:
      - git
    recommends:
      - make
    id: default
    formats:
      - deb
      - rpm
      - apk
    vendor: gomdlint
    homepage: https://github.com/gomdlint/gomdlint
    maintainer: gomdlint team <team@gomdlint.dev>
    description: A high-performance Go markdown linter with plugin extensibility
    license: MIT
    bindir: /usr/bin
    libdirs:
      header: /usr/include
      carchive: /usr/lib
      cshared: /usr/lib
snapshot:
  version_template: '{{ incpatch .Version }}-next'
checksum:
  name_template: checksums.txt
  algorithm: sha256
dockers:
  - goos: linux
    goarch: amd64
    goarm: "6"
    goamd64: v1
    dockerfile: Dockerfile
    image_templates:
      - gomdlint/gomdlint:latest
      - gomdlint/gomdlint:{{ .Tag }}
      - gomdlint/gomdlint:v{{ .Major }}
      - gomdlint/gomdlint:v{{ .Major }}.{{ .Minor }}
    build_flag_templates:
      - --pull
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --platform=linux/amd64
    use: docker
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^style:'
      - '^chore:'
  sort: asc
  use: github
  format: '{{ .SHA }}: {{ .Message }} ({{ with .AuthorUsername }}@{{ . }}{{ else }}{{ .AuthorName }} <{{ .AuthorEmail }}>{{ end }})'
  groups:
    - title: Features
      regexp: ^.*feat[(\w)]*:+.*$
    - title: Bug Fixes
      regexp: ^.*fix[(\w)]*:+.*$
      order: 1
    - title: Performance Improvements
      regexp: ^.*perf[(\w)]*:+.*$
      order: 2
    - title: Refactoring
      regexp: ^.*refactor[(\w)]*:+.*$
      order: 3
    - title: Documentation
      regexp: ^.*docs[(\w)]*:+.*$
      order: 4
    - title: Other
      order: 999
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  skip: "true"
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
    expected_status_codes:
      - 200
      - 201
      - 202
      - 204
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
brews:
  - name: gomdlint
    repository:
      owner: gomdlint
      name: homebrew-tap
    commit_author:
      name: goreleaserbot
      email: bot@goreleaser.com
    commit_msg_template: Brew formula update for {{ .ProjectName }} version {{ .Tag }}
    test: |
      system "#{bin}/gomdlint version"
    description: A high-performance Go markdown linter with plugin extensibility
    homepage: https://github.com/gomdlint/gomdlint
    license: MIT
    goarm: "6"
    goamd64: v1
